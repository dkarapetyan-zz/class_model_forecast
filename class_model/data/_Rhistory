munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
munged.macro.data<-InputMacroMunger("base_macro.csv")
munged.macro.data
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
browser()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
return (munged.macro.data)
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
munged.macro.data<-InputMacroMunger("base_macro.csv")
munged.macro.data
InputMacroMunger("base_macro.csv")
rm(list=ls())
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
#for (i in (1:(nrow(data)-3))) {
#munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
#}
#munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
#munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
#munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
##returns maximum of quarterly change, and zero
#munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
#0, 0, data$quarterly.change.in.bbb.bond.spread)
#for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
#munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
#munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
#log(data$commercial.real.estate.price.index[i]))
#}
#munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
#0)
#munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
#0, data$commercial.property.price.growth, 0)
#munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
#munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
#munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
#munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
#munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
##returns maximum of quarterly change, and zero
#munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
#0, 0, data$quarterly.change.in.bbb.bond.spread)
#for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
#munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
#munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
#log(data$commercial.real.estate.price.index[i]))
#}
#munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
#0)
#munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
#0, data$commercial.property.price.growth, 0)
#munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
#munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
#for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
#munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
#munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
#log(data$commercial.real.estate.price.index[i]))
#}
#munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
#0)
#munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
#0, data$commercial.property.price.growth, 0)
#munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
#munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
#munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
#munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- data[which(data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
rm(ls())
rm(list=ls())
rm(list=ls())
setwd("H:/EY/CLASS Model/Forecast/Data/Input")
Base.macro=read.csv("Base.macro.csv")
Adverse.macro=read.csv("Adverse.macro.csv")
Severely.Adverse.macro=read.csv("Severely.Adverse.macro.csv")
names(Severely.Adverse.macro)
Macro.Input.f<-function(scenario="",data="", start.Y=2014, start.Q=3){
#data=Base.macro
data$Term.Spread=data$X10.year.Treasury.yield-data$X3.Month.Treasury.Yield
data$Annualized.Real.GDP.growth=NA
for (i in (4:nrow(data)))
{
data$Annualized.Real.GDP.growth[i]=sum(data$Real.GDP.growth[(i-3):i])/4
}
data$Quarterly.change.in.10.year.Treasury.yield=NA
data$Quarterly.change.in.10.year.Treasury.yield[2: nrow(data)]=diff(data$X10.year.Treasury.yield)
data$Stock.Market.returns=NA
data$Stock.Market.returns[-1]=diff(log(data$Dow.Jones.Total.Stock.Market.Index..Level.))
data$Quarterly.change.in.BBB.bond.spread=NA
data$Quarterly.change.in.BBB.bond.spread[-1]=diff(data$BBB.corporate.yield)
data$Quarterly.change.in.BBB.Spread.if.change.is.positive=ifelse(data$Quarterly.change.in.BBB.bond.spread<0,0,data$Quarterly.change.in.BBB.bond.spread)
data$Home.price.growth=NA
data$Commercial.Property.Price.Growth=NA
for (i in (5:nrow(data)))
{
data$Home.price.growth[i]=100*(log(data$House.Price.Index..Level.[i])-
log(data$House.Price.Index..Level.[i-4]))
data$Commercial.Property.Price.Growth[i]=100*(log(data$Commercial.Real.Estate.Price.Index..Level.[i])-
log(data$Commercial.Real.Estate.Price.Index..Level.[i-4]))
}
data$Home.price.growth.if.growth.is.negative=ifelse(data$Home.price.growth<0,
data$Home.price.growth, 0)
data$Commercial.Property.Price.Growth.Negative=ifelse(data$Commercial.Property.Price.Growth<0,
data$Commercial.Property.Price.Growth, 0)
data$Annualized.Change.in.Unemployment=NA
data$Annualized.Change.in.Unemployment[-1]=diff(data$Unemployment.rate)*4
data$Time.trend=data$Quarter*0.25+(data$Year-1991)
data=data[which(data$Time.trend>=(start.Y-1991)+0.25*start.Q),]
write.csv(data,file=paste(getwd(), "/",scenario, "Macro.Model.Input.csv", sep=''),row.names = FALSE)
print(data[1:5,])
}
Macro.Input.f(scenario="Base",data=Base.macro)
Macro.Input.f(scenario="Adverse",data=Adverse.macro)
Macro.Input.f(scenario="Severely.Adverse",data=Severely.Adverse.macro)
rm(list=ls())
#take sample of many macroeconomic variables, and munge so that we compute some
#new variables that are crucial as inputs for our autoregression model.
InputMacroMunger <- function(data = "", start.y = 2014, start.q = 3) {
setwd("c:/ppnr.quant.repo/class_model/data/")
data <- read.csv(data)
colnames(data) <- gsub("\\.{2}.*$", "", colnames(data))   #delete ellipses and everything after from import
colnames(data) <- lapply(colnames(data), tolower)      #change all variables to lowercase
#first, declare all macroeconomic variables we will generate from the input
#macroeconomic scenario data
munged.macro.data<-list()
munged.macro.data$annualized.real.gdp.growth <- NULL
munged.macro.data$quarterly.change.in.10.year.treasury.yield <- NULL
munged.macro.data$quarterly.change.in.bbb.bond.spread <- NULL
munged.macro.data$home.price.growth <- NULL
munged.macro.data$commercial.property.price.growth <- NULL
munged.macro.data$stock.market.returns <- NULL
munged.macro.data$annualized.change.in.unemployment <- NULL
#next, we run our computations for each variable, then append the variable
#to the end of the input market scenario spreadsheet "data"
munged.macro.data$term.spread <- (data$x10.year.treasury.yield - data$x3.month.treasury.yield)
for (i in (1:(nrow(data)-3))) {
munged.macro.data$annualized.real.gdp.growth[4*i] <- sum(data$real.gdp.growth[i:(i+3)])/4
}
munged.macro.data$quarterly.change.in.10.year.treasury.yield[2:nrow(data)] <- diff(data$x10.year.treasury.yield)
munged.macro.data$stock.market.returns <- diff(log(data$dow.jones.total.stock.market.index))
munged.macro.data$quarterly.change.in.bbb.bond.spread <- diff(data$bbb.corporate.yield)
#returns maximum of quarterly change, and zero
munged.macro.data$quarterly.change.in.bbb.spread.if.change.is.positive <- ifelse(data$quarterly.change.in.bbb.bond.spread <
0, 0, data$quarterly.change.in.bbb.bond.spread)
for (i in (1:(nrow(data)-4))) { # 3 entries of NA, with fourth entry corresponding to annual growth
munged.macro.data$home.price.growth[4*i] <- 100 * (log(data$house.price.index[i+4]) - log(data$house.price.index[i]))
munged.macro.data$commercial.property.price.growth[4*i] <- 100 * (log(data$commercial.real.estate.price.index[i+4]) -
log(data$commercial.real.estate.price.index[i]))
}
munged.macro.data$home.price.growth.if.growth.is.negative <- ifelse(data$home.price.growth < 0, data$home.price.growth,
0)
munged.macro.data$commercial.property.price.growth.negative <- ifelse(data$commercial.property.price.growth <
0, data$commercial.property.price.growth, 0)
munged.macro.data$annualized.change.in.unemployment <- diff(data$unemployment.rate) * 4
munged.macro.data$time.trend <- data$quarter * 0.25 + (data$year - 1991)
#munged.macro.data <- munged.macro.data[which(munged.macro.data$time.trend >= (start.y - 1991) + 0.25 * start.q), ]
#may not be necessary,  will revisit later
#return munged.macro.data
munged.macro.data
}
#Generate Output only for base macro.
#TODO: rewrite code later on so that it takes a user input (base, adverse, or severely adverse)
#nd outputs the associated capital forecast
InputMacroMunger("base_macro.csv")
View(InputMacroMunger("base_macro.csv"))
detach("package:vimcom", unload=TRUE)
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.zip",
destfile = "vimcom_1.2-0.zip")
install.packages("vimcom_1.2-0.zip", type = "win.binary",
repos = NULL)
detach("package:vimcom", unload=TRUE)
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.zip",
destfile = "vimcom_1.2-0.zip")
install.packages("vimcom_1.2-0.zip", type = "win.binary",
repos = NULL)
detach("package:vimcom", unload=TRUE)
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.2.zip",
destfile = "vimcom_1.2-0.2.zip")
install.packages("vimcom_1.2-0.2.zip", type = "win.binary",
repos = NULL)
detach("package:vimcom", unload=TRUE)
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.zip",
destfile = "vimcom_1.2-0.zip")
install.packages("vimcom_1.2-0.zip", type = "win.binary",
repos = NULL)
detach("package:vimcom", unload=TRUE)
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.zip",
destfile = "vimcom_1.2-0.zip")
install.packages("vimcom_1.2-0.zip", type = "win.binary",
repos = NULL)
devtools::install_github("jalvesaq/VimCom")
download.file("http://www.lepem.ufc.br/jaa/vimcom_1.2-0.tar.gz",
destfile = "vimcom_1.2-0.tar.gz")
install.packages("vimcom_1.2-0.tar.gz", type = "source",
repos = NULL)
edit(~/.Rprofile)
edit("~/.Rprofile")
edit(~/.Rprofile)
edit(file = "~/.Rprofile")
edit(file = "~/.Rprofile")
edit(file = '~/.Rprofile')
edit(file = "~/.Rprofile")
library(vimcom)
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.0")
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-1.1")
